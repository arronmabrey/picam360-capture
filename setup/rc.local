#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi


mkdir -p /var/log/ConsoleKit
mkdir -p /var/log/samba
mkdir -p /var/log/fsck
mkdir -p /var/log/apt
mkdir -p /var/log/ntpstats
chown root.ntp /var/log/ntpstats
chown root.adm /var/log/samba

touch /var/log/lastlog
touch /var/log/wtmp
touch /var/log/btmp
chown root.utmp /var/log/lastlog
chown root.utmp /var/log/wtmp
chown root.utmp /var/log/btmp

sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -t nat -A POSTROUTING -o wlan1 -j MASQUERADE

iw dev wlan0 set power_save off

#
#  Read environment 
#
for line in $(cat /home/pi/.picam360rc | grep -v '^\s*#' | grep -v '^\s*$')
  do
     export $line
  done

# lunch driver
echo "lunch driver"
if [ $DRIVER_IP = "127.0.0.1" ]; then
  set -- $(/opt/vc/bin/vcgencmd get_camera)
  if [ $2 = "detected=1" ]; then
    echo "RASPI CAM"
    su -l pi -c "bash /home/pi/picam360/picam360-driver/lunch.sh -w 1536 -h 1536 -n 1 -t RASPI &"
  elif [ -e /dev/video0 ]; then
    echo "USB CAM"
    su -l pi -c "bash /home/pi/picam360/picam360-driver/lunch.sh -w 2048 -h 1536 -n 1 -t USB &"
  else
    echo "NO CAM"
  fi
fi

# lunch capture & server
echo "lunch capture"
OPTION="-w 1536 -h 1536 -r -c MJPEG -n 1"
set -- $(tvservice -s)
if [ $(($2&0x02)) != 0 ]; then
	echo "HDMI"
	su -l pi -c "bash /home/pi/picam360/picam360-capture/lunch.sh $OPTION -0 \"-w 800 -h 480 -v mpu9250\" -p &"
else
	echo "NO HDMI"
	su -l pi -c "bash /home/pi/picam360/picam360-capture/lunch.sh $OPTION -0 \"-w 320 -h 320 -s h264 -f 5\" &"
	su -l pi -c "bash /home/pi/picam360/picam360-server/sh/start-app.sh &"
fi

exit 0
